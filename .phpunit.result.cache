C:37:"PHPUnit\Runner\DefaultTestResultCache":5363:{a:2:{s:7:"defects";a:11:{s:38:"SayHelloArgumentTest::testDataProvider";i:5;s:49:"GetUniqueValueTest::testPositive with data set #2";i:3;s:28:"IsSumEqualTest::testNegative";i:3;s:56:"MirrorMultibyteStringTest::testPositive with data set #0";i:4;s:56:"MirrorMultibyteStringTest::testPositive with data set #1";i:4;s:56:"MirrorMultibyteStringTest::testPositive with data set #2";i:4;s:56:"MirrorMultibyteStringTest::testPositive with data set #3";i:4;s:49:"GetUniqueValueTest::testPositive with data set #3";i:3;s:45:"IsSumEqualTest::testPositive with data set #1";i:3;s:45:"IsSumEqualTest::testPositive with data set #2";i:3;s:55:"CountArgumentsTest::testCountArguments with data set #3";i:3;}s:5:"times";a:74:{s:59:"SayHelloArgumentTest::testSayHelloArgument with data set #0";d:0;s:59:"SayHelloArgumentTest::testSayHelloArgument with data set #1";d:0;s:59:"SayHelloArgumentTest::testSayHelloArgument with data set #2";d:0;s:59:"SayHelloArgumentTest::testSayHelloArgument with data set #3";d:0;s:59:"SayHelloArgumentTest::testSayHelloArgument with data set #4";d:0;s:38:"SayHelloArgumentTest::testDataProvider";d:0;s:47:"GetBrandNameTest::testPositive with data set #0";d:0;s:47:"GetBrandNameTest::testPositive with data set #1";d:0;s:47:"GetBrandNameTest::testPositive with data set #2";d:0;s:47:"GetBrandNameTest::testPositive with data set #3";d:0;s:47:"GetBrandNameTest::testPositive with data set #4";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #0";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #1";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #2";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #3";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #4";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #5";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #6";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #7";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #8";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #9";d:0;s:52:"GetMinuteQuarterTest::testPositive with data set #10";d:0;s:52:"GetMinuteQuarterTest::testPositive with data set #11";d:0;s:34:"GetMinuteQuarterTest::testNegative";d:0;s:49:"GetUniqueValueTest::testPositive with data set #0";d:0;s:49:"GetUniqueValueTest::testPositive with data set #1";d:0.001;s:49:"GetUniqueValueTest::testPositive with data set #2";d:0;s:49:"GetUniqueValueTest::testPositive with data set #3";d:0;s:45:"GroupByTagTest::testPositive with data set #0";d:0;s:45:"GroupByTagTest::testPositive with data set #1";d:0;s:45:"IsLeapYearTest::testPositive with data set #0";d:0;s:45:"IsLeapYearTest::testPositive with data set #1";d:0;s:45:"IsLeapYearTest::testPositive with data set #2";d:0;s:45:"IsLeapYearTest::testPositive with data set #3";d:0;s:45:"IsLeapYearTest::testPositive with data set #4";d:0;s:45:"IsLeapYearTest::testPositive with data set #5";d:0;s:45:"IsLeapYearTest::testPositive with data set #6";d:0;s:45:"IsLeapYearTest::testPositive with data set #7";d:0;s:45:"IsLeapYearTest::testPositive with data set #8";d:0;s:45:"IsLeapYearTest::testPositive with data set #9";d:0;s:46:"IsLeapYearTest::testPositive with data set #10";d:0;s:46:"IsLeapYearTest::testPositive with data set #11";d:0;s:46:"IsLeapYearTest::testPositive with data set #12";d:0;s:46:"IsLeapYearTest::testPositive with data set #13";d:0;s:46:"IsLeapYearTest::testPositive with data set #14";d:0;s:28:"IsLeapYearTest::testNegative";d:0;s:45:"IsSumEqualTest::testPositive with data set #0";d:0;s:45:"IsSumEqualTest::testPositive with data set #1";d:0;s:45:"IsSumEqualTest::testPositive with data set #2";d:0;s:45:"IsSumEqualTest::testPositive with data set #3";d:0;s:28:"IsSumEqualTest::testNegative";d:0;s:56:"MirrorMultibyteStringTest::testPositive with data set #0";d:0;s:56:"MirrorMultibyteStringTest::testPositive with data set #1";d:0;s:56:"MirrorMultibyteStringTest::testPositive with data set #2";d:0;s:56:"MirrorMultibyteStringTest::testPositive with data set #3";d:0;s:52:"RepeatArrayValuesTest::testPositive with data set #0";d:0;s:52:"RepeatArrayValuesTest::testPositive with data set #1";d:0;s:52:"RepeatArrayValuesTest::testPositive with data set #2";d:0;s:52:"RepeatArrayValuesTest::testPositive with data set #3";d:0;s:26:"SayHelloTest::testSayHello";d:0;s:55:"SnakeCaseToCamelCaseTest::testPositive with data set #0";d:0;s:55:"SnakeCaseToCamelCaseTest::testPositive with data set #1";d:0;s:55:"SnakeCaseToCamelCaseTest::testPositive with data set #2";d:0;s:73:"SayHelloArgumentWrapperTest::testSayHelloArgumentWrapper with data set #0";d:0;s:73:"SayHelloArgumentWrapperTest::testSayHelloArgumentWrapper with data set #1";d:0;s:55:"CountArgumentsTest::testCountArguments with data set #0";d:0.012;s:55:"CountArgumentsTest::testCountArguments with data set #1";d:0;s:55:"CountArgumentsTest::testCountArguments with data set #2";d:0;s:55:"CountArgumentsTest::testCountArguments with data set #3";d:0;s:69:"CountArgumentsWrapperTest::testCountArgumentsWrapper with data set #0";d:0.003;s:69:"CountArgumentsWrapperTest::testCountArgumentsWrapper with data set #1";d:0;s:69:"CountArgumentsWrapperTest::testCountArgumentsWrapper with data set #2";d:0;s:69:"CountArgumentsWrapperTest::testCountArgumentsWrapper with data set #3";d:0;s:69:"CountArgumentsWrapperTest::testCountArgumentsWrapper with data set #4";d:0;}}}